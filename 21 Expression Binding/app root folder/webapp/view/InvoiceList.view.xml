<mvc:View
controllerName="ui5.walkthrough.controller.InvoiceList"
   xmlns="sap.m"
   xmlns:mvc="sap.ui.core.mvc">
   <List
      headerText="{i18n>invoiceListTitle}"
      class="sapUiResponsiveMargin"
      width="auto"
      items="{invoice>/Invoices}" >
      <items>
         <ObjectListItem

            title="{invoice>Quantity} x {invoice>ProductName}"

            number="{
                    parts: [ 'invoice>ExtendedPrice',
                             'view>/currency'],
                    type: 'sap.ui.model.type.Currency',
                    formatOptions: { showMeasure: false } }"
                    
           numberUnit="{view>/currency}"
           numberState="{= ${invoice>ExtendedPrice} > 7 ? 'Error' : 'Success' }"/>

      </items>
   </List>
</mvc:View>

<!-- Agregamos la propiedad numberState en nuestra vista declarativa e 
introducimos una nueva sintaxis vinculante que comienza con = dentro de los corchetes.
Este símbolo se utiliza para iniciar una nueva sintaxis de enlace, se llama expresión y 
puede realizar una lógica de cálculo simple como el operador ternario que se muestra aquí. -->

<!-- La condición del operador es un valor de nuestro modelo de datos. 
Un enlace de modelo dentro de un enlace de expresión debe tener como carácter de escape el signo $, 
como puede ver en el código. Configuramos el estado en "Error" (el número aparecerá en rojo) 
si el precio es superior a 50 y en "Éxito" (el número aparecerá en verde) en caso contrario. -->

<!-- Las expresiones se limitan a un conjunto particular de operaciones que ayudan 
a formatear los datos, como expresiones matemáticas, comparaciones, etc. -->

<!-- Convenciones
Utilice únicamente el enlace de expresión para cálculos triviales. -->